<?php
/**
 * Copyright Â© 2020 Magenest. All rights reserved.
 * See COPYING.txt for license details.
 *
 * cf_theme extension
 * NOTICE OF LICENSE
 *
 * @category Magenest
 * @package cf_theme
 * @package linhphung
 */
/** @var $block Magenest\Widget\Block\Adminhtml\Widget\Render*/
$element = $block->getElement();
$htmlId = $element->getId();
$chooserUrl = $this->getUrl('adminhtml/widget_instance/products', []);
?>

<a href="javascript:void(0)" onclick="MultiProductChooser.displayChooser('<?=$htmlId?>-container')" class="widget-option-chooser" title="{__('Open Chooser')}">
    <img src="<?=$block->getViewFileUrl('images/rule_chooser_trigger.gif')?>" alt="{__('Open Chooser')}" />
</a>
<a href="javascript:void(0)" onclick="MultiProductChooser.hideChooser('<?=$htmlId?>-container')" title="{__('Apply')}">
    <img src="<?=$block->getViewFileUrl('images/rule_component_apply.gif')?>" alt="{__('Apply')}">
</a>
<div class="chooser idchooser-<?=$htmlId?>"></div>


<script>
    require([
        'jquery',
        'Magento_Ui/js/modal/alert',
        "prototype"
    ], function (jQuery, alert) {
        var choosedProduct = {};
        var MultiProductChooser = {
            displayChooser : function(chooser) {
                chooser  = $(chooser).down('div.chooser');
                entities = chooser.up('div.chooser_container').down('input[type="text"].entities').value;
                postParameters = {
                    selected: entities
                };
                url = '<?=$chooserUrl?>';
                if (chooser && url) {
                    new Ajax.Request(url, {
                        method  : 'post',
                        parameters : postParameters,
                        onSuccess  : function(transport) {
                            try {
                                if (transport.responseText) {
                                    chooser.innerHTML = '';
                                    Element.insert(chooser, transport.responseText);
                                    chooser.removeClassName('no-display');
                                    chooser.show();
                                }
                            } catch (e) {
                                alert({
                                    content: 'Error occurs during loading chooser.'
                                });
                            }
                        }
                    });
                    chooser.show();
                }
            },
            hideChooser : function(chooser) {
                chooser = $(chooser).down('div.chooser');
                if (chooser) {
                    chooser.addClassName('no-display');
                    chooser.hide();
                }
            },
            addProductItemToSelection: function(groupId, item) {
                if (!isNaN(parseInt(item))) {
                    this.selectedItems[groupId].set(item, 1);
                }
            },
            checkProduct : function(event) {
                var cont = document.querySelector(".idchooser-<?=$htmlId?>");
                var elm = event.memo.element,
                    container = event.target.up('div.chooser').up('div.chooser_container');
                var matches = cont.querySelector("tr.on-mouse");
                var mat = matches.querySelector("td.col-entity_id");
                var matName = matches.querySelector("td.col-chooser_name");
                value = container.down('input[type="text"].entities').value.strip();
                pickedId = mat.childNodes[0].nodeValue;
                pickedId = pickedId.trim();
                pickedName = matName.childNodes[0].nodeValue;
                pickedName = pickedName.trim();
                choosedProduct[pickedId] = pickedName;
                if (elm.checked) {
                    if (value) ids = value.split(',');
                    else ids = [];

                    if (-1 == ids.indexOf(pickedId)) {
                        ids.push(pickedId);
                        container.down('input[type="text"].entities').value = ids.join(',');
                    }
                } else {
                    ids = value.split(',');

                    while (-1 != ids.indexOf(pickedId)) {
                        ids.splice(ids.indexOf(pickedId), 1);
                        container.down('input[type="text"].entities').value = ids.join(',');
                    }
                }
                var products = jQuery('input[name="parameters[products]"].entities').val();
            }
        };
        window.MultiProductChooser = MultiProductChooser;
        jQuery(function() {
            Event.observe(document, 'product:changed', function(event){
                MultiProductChooser.checkProduct(event);
            });
        });
    });
</script>
